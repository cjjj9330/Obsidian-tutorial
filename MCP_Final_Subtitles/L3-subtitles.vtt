﻿WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:127826

1
00:00:02.043 --> 00:00:04.045
Now it's time to start coding.

2
00:00:04.045 --> 00:00:07.048
In this lesson, you'll build a chatbot
and code its tools.

3
00:00:07.424 --> 00:00:11.177
Before you start working with MCP,
let's make sure you have a good foundation

4
00:00:11.177 --> 00:00:14.180
with tools use
and prompting large language models.

5
00:00:14.180 --> 00:00:15.640
All right, let's code.

6
00:00:15.640 --> 00:00:17.851
So let's get started
building our chatbot.

7
00:00:17.851 --> 00:00:21.771
And before we hop into building
MCP servers, we're going to start

8
00:00:21.771 --> 00:00:25.734
just by building a very simple application
with a chatbot that makes

9
00:00:25.734 --> 00:00:29.404
use of archive for searching for papers
and finding some information.

10
00:00:29.946 --> 00:00:32.449
If this is information
that you're already familiar with, feel

11
00:00:32.449 --> 00:00:35.702
free to skip this lesson and hop
into building your first MCP server.

12
00:00:35.910 --> 00:00:38.413
So let's get started by bringing
in some libraries that we need.

13
00:00:38.413 --> 00:00:40.457
So we're
going to bring in the arxiv SDK.

14
00:00:40.457 --> 00:00:43.168
This is going to allow us
to start searching for papers.

15
00:00:43.168 --> 00:00:44.753
We're then going to bring in the JSON

16
00:00:44.753 --> 00:00:48.506
module for some formatting
the OS module for environment variables.

17
00:00:48.840 --> 00:00:51.718
We're going to bring in a little bit
of typing so we can type our code.

18
00:00:51.718 --> 00:00:54.679
And then we'll make sure
we bring in the Anthropic SDK.

19
00:00:54.679 --> 00:00:55.472
I'm going to first start

20
00:00:55.472 --> 00:00:58.683
by defining a constant here
called paper directory,

21
00:00:58.683 --> 00:01:00.685
which is just going to be
the string papers.

22
00:01:00.685 --> 00:01:04.355
And this is what I'm going to be using
for saving information to the file system.

23
00:01:04.439 --> 00:01:06.316
I'm then going to bring
in my first function here.

24
00:01:06.316 --> 00:01:07.442
So let's go take a look at this.

25
00:01:07.442 --> 00:01:08.985
This function is called search papers.

26
00:01:08.985 --> 00:01:12.781
And it accepts some kind of topic and a
number of results which defaults to five.

27
00:01:12.864 --> 00:01:15.742
And what I'm doing here
is searching for papers on archive.

28
00:01:15.742 --> 00:01:19.412
And if you're not familiar with Archive
is an open source repository

29
00:01:19.412 --> 00:01:22.874
of many different published papers
across a variety of domains,

30
00:01:22.874 --> 00:01:26.294
from mathematics
to science to many different disciplines.

31
00:01:26.461 --> 00:01:27.879
So we're going to search for some papers,

32
00:01:27.879 --> 00:01:30.840
and then we're going
to return a list of paper IDs.

33
00:01:30.840 --> 00:01:32.592
And we're going to
then use those paper IDs

34
00:01:32.592 --> 00:01:35.595
in another function
to get more detail and summarization.

35
00:01:35.595 --> 00:01:36.805
We're going to initialize our client.

36
00:01:36.805 --> 00:01:39.057
And then we'll start
searching for relevant articles.

37
00:01:39.057 --> 00:01:42.268
We'll take the results of those search
and we'll go ahead and create a directory

38
00:01:42.435 --> 00:01:43.770
if it exists already, great.

39
00:01:43.770 --> 00:01:45.438
If not, we'll go ahead and make it.

40
00:01:45.438 --> 00:01:49.150
And we'll save this information
to a file called papers info dot JSON.

41
00:01:49.442 --> 00:01:52.737
What we're going to do is process each
of these papers and create a dictionary.

42
00:01:52.737 --> 00:01:55.365
And then we're going to go ahead and write
that to our file.

43
00:01:55.365 --> 00:01:57.742
This is going to give us back some IDs
when we're done.

44
00:01:57.742 --> 00:02:00.078
Let's go ahead and search for some papers
for computers.

45
00:02:00.078 --> 00:02:02.831
We'll see here.
This is being saved to a file locally.

46
00:02:02.831 --> 00:02:06.417
And we got a bunch of IDs that we can use
to get some more information around.

47
00:02:06.668 --> 00:02:08.670
We're going to go ahead
and bring in our second function here

48
00:02:08.670 --> 00:02:11.005
now to make use of this paper ID.

49
00:02:11.005 --> 00:02:13.800
So we're going to define another function
here called extract info.

50
00:02:13.800 --> 00:02:16.136
Which is going to take
in one of these paper IDs

51
00:02:16.136 --> 00:02:20.014
it's going to look in our papers info JSON
and give us back some information

52
00:02:20.014 --> 00:02:21.099
about that paper.

53
00:02:21.099 --> 00:02:23.893
And if it can't be found
we'll go ahead and just return a string.

54
00:02:23.893 --> 00:02:26.187
There's
no saved information for that paper.

55
00:02:26.187 --> 00:02:29.190
So I'm going to go ahead and grab this
first ID right here.

56
00:02:29.190 --> 00:02:30.859
Let's go ahead and run this function.

57
00:02:30.859 --> 00:02:33.027
And then we'll go ahead
and call this function

58
00:02:33.027 --> 00:02:35.989
with that particular
ID just to show you what this looks like.

59
00:02:35.989 --> 00:02:38.199
We can see right here
we're getting back some data

60
00:02:38.199 --> 00:02:41.286
not only related to the title of this,
but also the URL

61
00:02:41.286 --> 00:02:44.289
for the PDF as well as a summary
of this particular paper.

62
00:02:44.664 --> 00:02:46.708
We're going to start
with these two functions.

63
00:02:46.708 --> 00:02:47.959
And then we're going to go ahead and start

64
00:02:47.959 --> 00:02:51.671
bringing in these functions
as tools for a large language model.

65
00:02:51.754 --> 00:02:55.466
So what we're going to be able to do
is pass in some tools for Anthropic's

66
00:02:55.508 --> 00:02:56.134
Claude model.

67
00:02:56.134 --> 00:03:00.471
We're then going to go ahead and build
a small chatbot that takes in these tools

68
00:03:00.722 --> 00:03:04.684
and knows when to call them and return the
data, particularly for these functions.

69
00:03:04.767 --> 00:03:06.477
So let's define our tools list.

70
00:03:06.477 --> 00:03:09.355
If you are familiar with tool use,
this should be nothing terribly new,

71
00:03:09.355 --> 00:03:11.232
but every single tool that you make
is always

72
00:03:11.232 --> 00:03:13.193
going to have a name and a description

73
00:03:13.193 --> 00:03:15.904
and then some kind of schema
that it needs to follow.

74
00:03:15.904 --> 00:03:19.741
So in this case, we have a tool for
search papers and a tool for extract info.

75
00:03:19.991 --> 00:03:23.328
Remember that the model itself
is not going to call these functions.

76
00:03:23.328 --> 00:03:24.704
We actually need to write the code

77
00:03:24.704 --> 00:03:27.707
to call those functions
and pass the data back to the model.

78
00:03:28.082 --> 00:03:31.628
But these tools are going to allow
the model to extend its functionality.

79
00:03:31.669 --> 00:03:34.255
So instead of saying I don't know
or hallucinate,

80
00:03:34.255 --> 00:03:36.216
we're going to get back
the answer that we want here.

81
00:03:36.216 --> 00:03:38.718
So let's go ahead and start writing
some of our logic

82
00:03:38.718 --> 00:03:41.721
for working with our large language model
and executing these tools.

83
00:03:42.138 --> 00:03:45.058
Let's bring in a little bit of mapping
for our tool.

84
00:03:45.058 --> 00:03:47.936
And right here we've got a function
that is going to map the tools

85
00:03:47.936 --> 00:03:51.231
that we have to calling that
underlying function.

86
00:03:51.397 --> 00:03:54.359
What you can see here is we have
a dictionary for each of our tool names.

87
00:03:54.359 --> 00:03:56.402
These refer to the functions
that we have below.

88
00:03:56.402 --> 00:03:59.948
And then a handy helper function to then
go ahead and call that particular function

89
00:04:00.114 --> 00:04:03.493
and return the result to us
in a variety of data types that come in.

90
00:04:03.868 --> 00:04:06.079
Let's go ahead and start
building in our chatbot right now.

91
00:04:06.079 --> 00:04:08.957
That's going to start by bringing
in any environment variables that we have

92
00:04:08.957 --> 00:04:13.086
API keys, and then creating an instance
of our Anthropic client.

93
00:04:13.419 --> 00:04:14.003
We're going to need this

94
00:04:14.003 --> 00:04:17.548
so that we can go ahead and make calls
to our model and get back some data.

95
00:04:17.757 --> 00:04:20.593
Let's go ahead
and bring in our boilerplate function

96
00:04:20.593 --> 00:04:22.387
to go ahead and start
working with the model.

97
00:04:22.387 --> 00:04:23.805
If you've worked with Anthropic

98
00:04:23.805 --> 00:04:26.808
before or many other models,
this is going to look very familiar.

99
00:04:27.058 --> 00:04:29.310
We're going to start
with a list of messages.

100
00:04:29.310 --> 00:04:32.230
We're going to go ahead and pass
in the query that the user puts in.

101
00:04:32.230 --> 00:04:34.899
I'm going to talk to Claude
3.7 Sonnet right now.

102
00:04:34.899 --> 00:04:37.318
We're going to go ahead
and start a loop for the chat.

103
00:04:37.318 --> 00:04:40.196
And if there is text data
put that into the message.

104
00:04:40.196 --> 00:04:43.324
If the data that's coming in is tool use,
if the model detects

105
00:04:43.324 --> 00:04:44.867
that a tool needs to be used,

106
00:04:44.867 --> 00:04:48.329
we're going to go ahead and bring in
our helper function for executing the tool

107
00:04:48.496 --> 00:04:51.499
and then appending that tool result
to the list of messages.

108
00:04:51.708 --> 00:04:54.335
Let's go ahead and see this in action.
Bring in our chat loop.

109
00:04:54.335 --> 00:04:55.503
We've got all the functionality

110
00:04:55.503 --> 00:04:58.464
we need to start working with tool
use talking to our model.

111
00:04:58.881 --> 00:05:00.925
Now let's start with a very simple example

112
00:05:00.925 --> 00:05:03.136
for what it's going to look like
to actually use this function.

113
00:05:03.136 --> 00:05:06.180
We're going to run an infinite loop
until we pass in the string quit.

114
00:05:06.723 --> 00:05:09.642
So let's go ahead and start
talking to our large language model.

115
00:05:09.642 --> 00:05:11.269
Call our chat loop function.

116
00:05:11.269 --> 00:05:14.272
Right now we can start putting in a query
to start talking to our model.

117
00:05:14.522 --> 00:05:16.316
So let's start with something very simple,

118
00:05:16.316 --> 00:05:19.027
like just saying
hi and make sure this works as expected.

119
00:05:19.027 --> 00:05:19.444
We can see

120
00:05:19.444 --> 00:05:22.613
the model here is going to let us know
not only that it's an AI assistant,

121
00:05:22.613 --> 00:05:25.616
but also let us know
some of the tools that it has available.

122
00:05:25.867 --> 00:05:26.993
This is excellent.

123
00:05:26.993 --> 00:05:29.704
So let's go ahead and start
making use of these tools.

124
00:05:29.704 --> 00:05:32.248
Let's search for recent papers
on a topic of interest.

125
00:05:32.248 --> 00:05:36.336
So why don't we go
and search for papers on algebra.

126
00:05:36.753 --> 00:05:40.673
And this should make use of the tool
that we have to go ahead and search

127
00:05:40.673 --> 00:05:41.174
for papers.

128
00:05:41.174 --> 00:05:44.427
We can see that topics being passed in
and the results are saved here.

129
00:05:45.094 --> 00:05:46.346
This is great.

130
00:05:46.346 --> 00:05:49.599
It's even following up with would you like
me to extract more detailed information.

131
00:05:49.599 --> 00:05:54.270
So I'll go ahead and say yes please
extract information

132
00:05:54.687 --> 00:05:59.359
on the first two
you found and summarize them both for me.

133
00:05:59.400 --> 00:06:02.528
So what we're going to do is make use
of that tool result that we got before.

134
00:06:02.695 --> 00:06:04.197
And we're going to pass that in

135
00:06:04.197 --> 00:06:06.699
and it's going to tell us
which IDs it's interested in.

136
00:06:06.699 --> 00:06:07.450
So I'm going to make sure

137
00:06:07.450 --> 00:06:10.995
that I pass in those particular IDs
so I can get that correctly done.

138
00:06:11.704 --> 00:06:13.039
The IDs are here.

139
00:06:13.039 --> 00:06:13.915
So we're going to see here

140
00:06:13.915 --> 00:06:16.501
it's going to extract the info
with these particular IDs.

141
00:06:16.501 --> 00:06:19.587
And we're going to go ahead and get the
result as well as a summarization here.

142
00:06:19.754 --> 00:06:24.384
So we got some information about in variant
algebras and deformation of algebras.

143
00:06:24.592 --> 00:06:26.552
Honestly, I cannot tell you what this is.

144
00:06:26.552 --> 00:06:28.054
But hopefully I can read the paper

145
00:06:28.054 --> 00:06:30.181
and get up to speed on what
this information has.

146
00:06:30.181 --> 00:06:33.559
Something to remember is that
there is no persistent memory here,

147
00:06:33.559 --> 00:06:36.687
so as you go ahead and search for queries
and get IDs,

148
00:06:36.687 --> 00:06:38.731
nothing is going to be stored permanently.

149
00:06:38.731 --> 00:06:42.235
So just make sure as you keep querying,
you're passing in those IDs

150
00:06:42.235 --> 00:06:45.238
and think of each conversation
as brand new each time.

151
00:06:45.363 --> 00:06:48.366
If you ever want to get out of this chat,
remember we can always type in quit.

152
00:06:48.449 --> 00:06:51.452
So make sure you run that
and we'll see that we're all done here.

153
00:06:51.452 --> 00:06:54.497
So what we've seen in
this lesson is a review of large language

154
00:06:54.497 --> 00:06:58.126
models, tool use
and making use of the archive SDK.

155
00:06:58.334 --> 00:07:01.254
What we're going to see
shortly is how we can refactor this code

156
00:07:01.254 --> 00:07:04.465
to turn those tools into MCP tools

157
00:07:04.799 --> 00:07:07.718
to allow for a server
to pass that information to us.

158
00:07:07.718 --> 00:07:10.555
We're then going to test that server
and see what the results look like.

159
00:07:10.555 --> 00:07:11.431
I'll see you in the next lesson.


