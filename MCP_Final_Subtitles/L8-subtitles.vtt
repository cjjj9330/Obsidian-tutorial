﻿WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:127826

1
00:00:02.043 --> 00:00:05.463
The MCP server you
built and the reference servers you used

2
00:00:05.588 --> 00:00:09.551
can also be used with any other MCP
compliant application.

3
00:00:10.051 --> 00:00:13.638
That could be an IDE for a desktop app
or an agentic framework.

4
00:00:14.097 --> 00:00:17.100
Claude desktop is an example of such
an application.

5
00:00:17.308 --> 00:00:18.184
In this lesson,

6
00:00:18.184 --> 00:00:21.688
you'll learn how to configure Claude
Desktop to connect to MCP servers.

7
00:00:22.230 --> 00:00:23.481
Let's have some fun!

8
00:00:23.481 --> 00:00:28.403
So you previously seen how to build
your own MCP servers and clients and use

9
00:00:28.403 --> 00:00:32.323
prompts, resources and tools to build
pretty sophisticated applications.

10
00:00:32.824 --> 00:00:35.702
And I mentioned that some of that code,
particularly when building

11
00:00:35.702 --> 00:00:38.705
clients and multiple clients,
can be a bit low level.

12
00:00:38.788 --> 00:00:42.792
What you're going to see is the ability
to use applications like Claude desktop

13
00:00:43.001 --> 00:00:48.001
and a variety of other agentic products,
to use MCP to connect to MCP servers

14
00:00:48.465 --> 00:00:51.509
and abstract away some of the challenges
of that lower-level coding.

15
00:00:51.634 --> 00:00:54.929
Right here I'm in a folder called MCP
project on the desktop,

16
00:00:54.929 --> 00:00:57.932
and I have the research server
that you made in a previous lesson.

17
00:00:58.016 --> 00:01:01.144
What I'm going to do now
is follow the same steps to create

18
00:01:01.144 --> 00:01:04.564
an environment with uv
and install the necessary dependencies.

19
00:01:04.564 --> 00:01:08.234
And then I'm going to navigate
to Claude Desktop and bring in this MCP

20
00:01:08.234 --> 00:01:11.905
server alongside a couple other
other reference servers that we've seen.

21
00:01:12.155 --> 00:01:13.823
So we'll start by doing uv init.

22
00:01:13.823 --> 00:01:17.619
I'll make sure to uv venv
and I'll activate my virtual environment.

23
00:01:17.744 --> 00:01:20.330
I'll install the necessary
dependencies that we have.

24
00:01:20.330 --> 00:01:23.249
So I'll go ahead and
add arxiv as well as MCP.

25
00:01:24.459 --> 00:01:24.959
Once I've

26
00:01:24.959 --> 00:01:28.046
got these added,
I have all of the necessary dependencies

27
00:01:28.046 --> 00:01:32.133
that I need to start my server,
but I'm not going to run the server here.

28
00:01:32.342 --> 00:01:35.053
I'm going to use Claude Desktop
to do that for me.

29
00:01:35.053 --> 00:01:38.515
The same way that we set up our own Json
file for configuring

30
00:01:38.515 --> 00:01:40.517
how to connect to MCP servers,

31
00:01:40.517 --> 00:01:43.770
we're going to do something similar
with Claude Desktop. In Claude Desktop,

32
00:01:43.853 --> 00:01:46.606
I'll head over to settings.

33
00:01:46.606 --> 00:01:48.274
I'll go to developer.

34
00:01:48.274 --> 00:01:49.609
And we can see here

35
00:01:49.609 --> 00:01:53.154
that I can edit a config file
to start connecting to MCP servers.

36
00:01:53.530 --> 00:01:56.199
I'm going to go ahead and open up
this JSON file.

37
00:01:56.199 --> 00:01:59.702
And inside here,
I'm going to paste in our configuration

38
00:01:59.702 --> 00:02:02.705
file from before, but with a slight change.

39
00:02:02.789 --> 00:02:06.334
We're still referencing the name
of the server and the command necessary

40
00:02:06.417 --> 00:02:07.794
to get the server started.

41
00:02:07.794 --> 00:02:11.464
What's important though,
is that for our research server, I'm

42
00:02:11.464 --> 00:02:15.885
specifying the exact file
path to go ahead and run the server.

43
00:02:20.849 --> 00:02:21.099
If you

44
00:02:21.099 --> 00:02:24.185
remember, when using standard
IO and connecting locally,

45
00:02:24.561 --> 00:02:28.773
the client is going to start a connection
and a subprocess to these servers.

46
00:02:28.982 --> 00:02:32.235
With this file and the Claude desktop
AI application.

47
00:02:32.443 --> 00:02:34.654
This is all abstracted away from us.

48
00:02:34.654 --> 00:02:37.240
So all of that lower-level code
that we were doing earlier

49
00:02:37.240 --> 00:02:38.783
we don't need to worry about.

50
00:02:38.783 --> 00:02:40.952
It's important
to know how it works under the hood.

51
00:02:40.952 --> 00:02:43.163
But what we're doing here
is that same idea

52
00:02:43.163 --> 00:02:46.166
multiple clients
connecting to multiple servers.

53
00:02:46.416 --> 00:02:48.668
But all we need is the configuration file.

54
00:02:48.668 --> 00:02:52.463
You're also going to see in Claude desktop,
what the interface looks like

55
00:02:52.630 --> 00:02:55.633
when working with prompts and tools
and resources.

56
00:02:55.842 --> 00:02:58.678
Once we've modified this file,
we have to close Claude desktop

57
00:02:58.678 --> 00:03:01.681
and reopen it
so we can establish these connections.

58
00:03:01.681 --> 00:03:05.310
Now that I've restarted Claude Desktop,
I can take a look at some of the tools

59
00:03:05.310 --> 00:03:06.436
I have access to.

60
00:03:06.436 --> 00:03:09.230
And we saw this before when exploring
SQLite 3.

61
00:03:09.230 --> 00:03:12.901
I have my local research server
with the tools that we've defined.

62
00:03:13.151 --> 00:03:18.151
I have my fetch and file system
and I have from the research server

63
00:03:18.573 --> 00:03:22.744
my resource as well as my prompts.
The interface for prompts and resources

64
00:03:22.744 --> 00:03:26.956
and tools is completely up to the
developer of a tool like Claude Desktop.

65
00:03:27.123 --> 00:03:30.210
There are a variety of AI assistants
and tools

66
00:03:30.210 --> 00:03:33.963
and agentic products that you can use
that support the Model Context Protocol.

67
00:03:34.172 --> 00:03:38.092
Let's examine those. Over here on the Model
Context Protocol documentation,

68
00:03:38.134 --> 00:03:41.846
we can see a list of applications
that support MCP integrations.

69
00:03:42.263 --> 00:03:44.515
And a lot of this should look
relatively familiar.

70
00:03:44.515 --> 00:03:46.226
These are some of the primitives
we've explored,

71
00:03:46.226 --> 00:03:48.102
like resources, prompts, and tools.

72
00:03:48.102 --> 00:03:49.479
And in the last section,

73
00:03:49.479 --> 00:03:52.815
you'll learn a bit about sampling
and routes other powerful primitives

74
00:03:53.149 --> 00:03:55.443
that are on their way
to getting more and more adoption.

75
00:03:55.443 --> 00:03:58.571
As you can see here,
there's quite a range of applications

76
00:03:58.571 --> 00:04:02.450
from web applications, agentic
applications, command line interfaces,

77
00:04:02.659 --> 00:04:06.162
integrated development environments
that support the model Context Protocol.

78
00:04:06.329 --> 00:04:09.332
You can click on any of these,
discover them, and see

79
00:04:09.374 --> 00:04:13.044
how to start talking to MCP servers
within these existing applications.

80
00:04:13.378 --> 00:04:15.213
What's so powerful about this idea

81
00:04:15.213 --> 00:04:17.674
is that while this may look
extremely vast,

82
00:04:17.674 --> 00:04:20.843
you've actually seen already
how a lot of this works under the hood

83
00:04:20.969 --> 00:04:23.554
by building your own servers
and own clients.

84
00:04:23.554 --> 00:04:26.140
So let's take a look
at how Claude desktop users are

85
00:04:26.140 --> 00:04:29.644
tools, prompts, and resources
by connecting to MCP servers.

86
00:04:30.144 --> 00:04:31.813
Now let's put this all together.

87
00:04:31.813 --> 00:04:35.275
I'm going to paste in a prompt
that I have here to use the fetch tool

88
00:04:35.275 --> 00:04:36.317
to visit DeepLearning.AI

89
00:04:36.317 --> 00:04:39.320
I can find an interesting topic
about machine learning.

90
00:04:39.779 --> 00:04:42.865
I'll then use our research server
to research a few papers

91
00:04:43.032 --> 00:04:45.326
and summarize the main topics covered.

92
00:04:45.326 --> 00:04:48.913
I'll then use the artifacts feature
to generate a web-based quiz

93
00:04:48.913 --> 00:04:52.709
application with a set of flashcards
based on the key topics in the papers.

94
00:04:52.875 --> 00:04:55.878
So what we're doing here
is combining a set of tools

95
00:04:55.878 --> 00:04:59.590
from different MCP servers
to fetch the data that we're looking for.

96
00:05:00.425 --> 00:05:03.428
So we're using the fetch tool here
to visit DeepLearning.AI.

97
00:05:03.928 --> 00:05:06.848
And here, looks like
there are quite a few interesting topics.

98
00:05:06.848 --> 00:05:10.518
One of those being multi-modal
LLMs and advancements in AI models.

99
00:05:10.768 --> 00:05:13.896
We'll then use our search papers tool
from the research server

100
00:05:14.147 --> 00:05:16.607
to extract some information
about those papers.

101
00:05:16.607 --> 00:05:19.360
We'll even look at one more recent paper
to ensure we have a good sample.

102
00:05:24.115 --> 00:05:26.576
Here, we see
the two papers that have been discovered

103
00:05:26.576 --> 00:05:29.287
and a web application
that's being built at the moment.

104
00:05:29.287 --> 00:05:32.874
The ability to incorporate visualizations
and tools like artifacts

105
00:05:33.207 --> 00:05:37.378
with the tools that we get from MCP
servers, allow us to build really powerful

106
00:05:37.378 --> 00:05:40.757
applications across a variety of domains
with relative ease.

107
00:05:41.174 --> 00:05:44.010
While we just have a small example here,
you can let your imagination

108
00:05:44.010 --> 00:05:47.013
carry you again
for all the different use cases we have.

109
00:05:47.055 --> 00:05:49.724
We've got a summarization
and a little game right here.

110
00:05:49.724 --> 00:05:51.559
We can take a look
at what some of these answers are.

111
00:05:51.559 --> 00:05:52.769
And with a little bit of prompting,

112
00:05:52.769 --> 00:05:55.313
we can always make this
look a little bit nicer.

113
00:05:55.313 --> 00:05:58.608
In this lesson, you've seen
how to use tools like Claude Desktop

114
00:05:58.900 --> 00:06:02.403
to connect to MCP servers
and abstract away a lot of the lower

115
00:06:02.403 --> 00:06:03.946
level networking and code.

116
00:06:03.946 --> 00:06:06.574
You've also seen a list
of many different MCP

117
00:06:06.574 --> 00:06:10.620
compatible applications to get you up
and running with different IDE's,

118
00:06:11.245 --> 00:06:14.248
web applications, and client-side
or desktop applications.

119
00:06:14.457 --> 00:06:15.458
In the next section,

120
00:06:15.458 --> 00:06:18.461
we'll dive a little bit deeper
into building remote MCP servers.

121
00:06:19.045 --> 00:06:19.379
See you then.


